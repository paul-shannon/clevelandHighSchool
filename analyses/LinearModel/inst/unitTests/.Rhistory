source("test_LinearModel.R")
runTests()
lm
q()
source("test_LinearModel.R")
runTests()
lm
q()
source("test_LinearModel.R")
lm
q()
source("test_LinearModel.R")
lm
q()
source("test_LinearModel.R")
show(lm)
tbl.factor <- getItem(d, "tbl.factors")
tbl.factors <- getItem(d, "tbl.factors")
cor(tbl.factors$Percent.Foreign.born, tbl.factors$Tree.Canopy)
cor(tbl.factors$Hazard.Ranking, tbl.factors$heart.dz.death.per.100k)
cor(tbl.factors$Hazard.Ranking, tbl.factors$Hazard.Ranking)
max(tbl.factors)
xx <- cor(tbl.factors)
max(xx)
max(xx[xx != 1])
xx
max(xx[xx != 1])
max(xx[xx < 0.9])
xx["Hazard.Ranking",]
sort(xx["Hazard.Ranking",])
sort(xx["Non.white.minority.population",])
correlate(lm, "Non.white.minority.population", "assault.hosp.per.100k")
q()
source("test_LinearModel.R")
q()
source("test_LinearModel.R")
x
q()
source("test_LinearModel.R"); runTests()
names(lm)
x
lm
source("test_LinearModel.R"); runTests()
q()
source("test_LinearModel.R"); runTests()
regl <- lm(x$vec2~x$vec1)
names(regl)
regl
regl$coefficients
plot(x$vec1, x$vec)
abline(x)
abline(regl)
x <- 1:10
y <- jitter(1:10)
y
plot(x,y)
abline(ln(y~x))
abline(lm(y~x))
?line
line(x, y)
line(x, y)$Coefficients
line(x, y)$Coefficients
names(line(x, y))
line(x, y)$coefficients
coefs <- line(x, y)$coefficients
?fitted
fitted(line(x, y))
fit <- line(1:10, (1:10)^2)
plot(fit)
plot(1:10, (1:10)^2)
fitted(fit)
plot(1:10, fitted(fit))
plot(1:10, (1:10)^2)
abline(1:10, fitted(fit))
fitted(fit)
abline(1:10, fitted(fit))
line(1:10, fitted(fit))
points(1:10, fitted(fit), col="red")
fit
fitted(fit)
fitted(line(1:10, (1:10)^2))
q()
source("test_LinearModel.R"); runTests()
source("test_LinearModel.R"); runTests()
names(x)
x$yFit
vec1
x$vec1
x$vec2
plot(x$vec1, x$vec2)
abline(x$vec1, x$yFit)
abline(sort(x$vec1), sort(x$yFit))
points(sort(x$vec1), sort(x$yFit), col="red")
Q
q()
source("test_LinearModel.R"); runTests()
vec1
vec2
entities
order(vec1)
order <- order(vec1)
vec1[order]
vec2[order]
entites[order]
entities[order]
Q
q()
source("test_LinearModel.R"); runTests()
x$yFit
x
plot(x$vec1, x$vec2)
points(x$vec1, x$yFit, col="red")
Q
q()
